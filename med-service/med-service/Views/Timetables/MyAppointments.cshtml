@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model IEnumerable<med_service.Models.Appointment>
@{
    ViewData["Title"] = ViewBag.UserRole == "Doctor" ? Localizer["myPatients"] : Localizer["myAppointments"];
}

<h1>@(ViewBag.UserRole == "Doctor" ? Localizer["myPatients"] : Localizer["myAppointments"])</h1>

<div class="row mb-3">
    <div class="col">
        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">@Localizer["toHome"]</a>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        @if (ViewBag.UserRole == "Doctor")
        {
            <p>@Localizer["noPatients"]</p>
        }
        else
        {
            <p>@Localizer["noAppointments"]</p>
        }
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    @if (ViewBag.UserRole == "Doctor")
                    {
                        <th>@Localizer["patient"]</th>
                    }
                    else
                    {
                        <th>@Localizer["doctor"]</th>
                    }
                    <th>@Localizer["day"]</th>
                    <th>@Localizer["time"]</th>
                    <th>@Localizer["status"]</th>
                    <th>@Localizer["notes"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @if (ViewBag.UserRole == "Doctor")
                        {
                            <td>@item.Patient.User.LastName @item.Patient.User.FirstName</td>
                        }
                        else
                        {
                            <td>@item.Doctor.User.LastName @item.Doctor.User.FirstName</td>
                        }
                        <td>@item.TimeSlot.Schedule.Day</td>
                        <td>@item.TimeSlot.StartTime.ToString(@"hh\:mm") - @item.TimeSlot.EndTime.ToString(@"hh\:mm")</td>
                        <td>
                            @switch (item.Status)
                            {
                                case Appointment.AppointmentStatus.PENDING:
                                    <span class="badge bg-warning">@Localizer["statusPending"]</span>
                                    break;
                                case Appointment.AppointmentStatus.CONFIRMED:
                                    <span class="badge bg-success">@Localizer["statusConfirmed"]</span>
                                    break;
                                case Appointment.AppointmentStatus.COMPLETED:
                                    <span class="badge bg-primary">@Localizer["statusCompleted"]</span>
                                    break;
                                case Appointment.AppointmentStatus.CANCELED:
                                    <span class="badge bg-danger">@Localizer["statusCanceled"]</span>
                                    break;
                            }
                        </td>
                        <td>@(string.IsNullOrEmpty(item.Notes) ? "—" : item.Notes)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
